[project]
name = "font-merge"
version = "0.1.0"
description = "PyQt6 desktop application for merging two fonts into a single font file"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "fonttools>=4.58.4",
    "pillow>=11.2.1",
    "pyinstaller>=6.14.1",
    "pyqt6>=6.9.1",
]

[project.optional-dependencies]
build = [
    "pyinstaller>=6.0.0",
]

[project.scripts]
font-merge = "font_merge.main:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/font_merge"]

# Ruff configuration
# https://docs.astral.sh/ruff/configuration/

[tool.ruff]
# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.12+
target-version = "py312"

# Include Python files
include = ["*.py", "*.pyi", "**/pyproject.toml", "*.ipynb"]

# Exclude common directories
exclude = [
    ".bzr",
    ".direnv", 
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

[tool.ruff.lint]
# Enable flake8-bugbear (`B`) rules, in addition to the defaults.
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings  
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
    "Q",  # flake8-quotes
]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.per-file-ignores]
# Tests can use magic values, assertions, and relative imports
"tests/**/*" = ["E501", "PLR2004", "S101", "TID252"]

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
docstring-code-line-length = "dynamic"

[dependency-groups]
dev = [
    "ruff>=0.12.1",
]
